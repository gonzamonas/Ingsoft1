

----QUIT----(11 September 2022 19:10:09) CuisUniversity-5481.image priorSource: 2810882!

----STARTUP---- (11 September 2022 19:10:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5481.image!


----QUIT----(11 September 2022 19:10:10) CuisUniversity-5481.image priorSource: 7059465!

----STARTUP---- (6 October 2022 20:29:08) as /home/gonzalo/Desktop/Portfolio/linux64/CuisUniversity-5481.image!


----End fileIn of /home/gonzalo/Desktop/Portfolio/linux64/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GM 10/6/2022 20:31:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GM 10/6/2022 20:31:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:31:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:31:43'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GM 10/6/2022 20:31:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GM 10/6/2022 20:31:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GM 10/6/2022 20:31:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GM 10/6/2022 20:31:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:31:43'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GM 10/6/2022 20:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:34:46'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GM 10/6/2022 20:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GM 10/6/2022 20:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GM 10/6/2022 20:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GM 10/6/2022 20:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:34:46'!
FAILURE!
!Withdraw methodsFor: 'value' stamp: 'GM 10/6/2022 20:36:58' prior: 50552441 overrides: 50552370!
value

	^ value * -1! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GM 10/6/2022 20:37:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:37:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:37:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GM 10/6/2022 20:37:05'!
FAILURE!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GM 10/6/2022 20:37:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GM 10/6/2022 20:37:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GM 10/6/2022 20:37:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GM 10/6/2022 20:37:05'!
FAILURE!
!Withdraw methodsFor: 'value' stamp: 'GM 10/6/2022 20:37:32' prior: 50552562 overrides: 50552370!
value

	^ value! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GM 10/6/2022 20:39:41' prior: 50552485!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) 
			ifTrue: [ aTransaction value ]
			ifFalse: [ aTransaction value * -1 ]
	] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GM 10/6/2022 20:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GM 10/6/2022 20:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GM 10/6/2022 20:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GM 10/6/2022 20:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GM 10/6/2022 20:39:50'!
PASSED!
!Deposit methodsFor: 'value' stamp: 'GM 10/6/2022 20:42:56'!
applyToBalance: currentBalance

	^ currentBalance + value! !
!Withdraw methodsFor: 'value' stamp: 'GM 10/6/2022 20:43:35'!
applyToBalance: currentBalance

	^ currentBalance - value ! !
!AccountTransaction methodsFor: 'value' stamp: 'GM 10/6/2022 20:43:55'!
applyToBalance: currentBalance 

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GM 10/6/2022 20:45:14' prior: 50552600!
balance

	^transactions inject: 0 into: [ :currentBalance :aTransaction | aTransaction applyToBalance: currentBalance ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GM 10/6/2022 20:45:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:45:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GM 10/6/2022 20:45:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GM 10/6/2022 20:45:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GM 10/6/2022 20:45:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GM 10/6/2022 20:45:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GM 10/6/2022 20:45:17'!
PASSED!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'GM 10/6/2022 21:04:25'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'no messages' stamp: 'GM 10/6/2022 21:05:41'!
test01

	self assert Portfolio new balance equals: 0! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/6/2022 21:05:58'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:05:50' prior: 50552693!
test01

	self assert: Portfolio new balance equals: 0! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:06:03'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:06:13'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:06:18' prior: 50552712!
balance
	^ 0! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:06:21'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:06:21'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:07:23'!
test02

	| portfolio |
	
	portfolio := Portfolio new.

	self assert: portfolio balance equals: 0! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:07:26' prior: 50552724!
test02

	| portfolio |
	
	portfolio := Portfolio new.
	self assert: portfolio balance equals: 0! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:08:19' prior: 50552731!
test02

	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new register: (Deposit for: 100)
	self assert: portfolio balance equals: 0! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:08:40' prior: 50552738!
test02

	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new register: (Deposit for: 100).
	portfolio add: account.
	self assert: portfolio balance equals: 100! !

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:08:41'!
ERROR!
!Portfolio methodsFor: 'add' stamp: 'GM 10/6/2022 21:08:55'!
add: aReceptiveAccount 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/6/2022 21:10:07'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'add' stamp: 'GM 10/6/2022 21:10:03' prior: 50552758!
add: aReceptiveAccount 
	
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:10:09'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'GM 10/6/2022 21:10:36' overrides: 16920235!
initialize

	accounts := OrderedCollection new! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:10:39' prior: 50552777 overrides: 16920235!
initialize

	accounts := OrderedCollection new.! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:10:42'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:10:42'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:10:42'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:11:32' prior: 50552716!
balance
	
	^accounts first balance.! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:11:35'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:11:35'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:11:35'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:12:39' prior: 50552795!
balance
	
	^accounts sum: [ :account | account balance ]! !
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:13:46' prior: 50552806!
balance
	
	^accounts isEmpty ifTrue: 0 ifFalse: accounts first balance! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:13:48'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:13:48'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:13:48'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:13:59'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:13:59'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:13:59'!
ERROR!

accounts isEmpty!
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:15:19' prior: 50552811!
balance
	
	^accounts isEmpty ifTrue: [ 0 ] ifFalse: [ accounts first balance ]! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:15:21'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:15:22'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:15:22'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:16:45'!
test03

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio add: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio add: (ReceptiveAccount new register: (Deposit for: 200)).
	self assert: portfolio balance equals: 300! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:17:06' prior: 50552747!
test02

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio add: (ReceptiveAccount new register: (Deposit for: 100)).
	self assert: portfolio balance equals: 100! !

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:17:12'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:18:02' prior: 50552831!
balance
	
	^accounts sum: [ :account | account balance ] ifEmpty: [ 0 ].! !

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:18:03'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:18:03'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:18:03'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:18:03'!
PASSED!
!Portfolio methodsFor: 'add' stamp: 'GM 10/6/2022 21:36:11'!
addReceptiveAcount: aReceptiveAccount 
	
	accounts add: aReceptiveAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:36:11' prior: 50552844!
test03

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addReceptiveAcount: (ReceptiveAccount new register: (Deposit for: 200)).
	self assert: portfolio balance equals: 300! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:36:11' prior: 50552855!
test02

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: (Deposit for: 100)).
	self assert: portfolio balance equals: 100! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:36:11' prior: 50552880!
addReceptiveAcount: aReceptiveAccount 
	
	accounts add: aReceptiveAccount.! !

!methodRemoval: Portfolio #add: stamp: 'GM 10/6/2022 21:36:11'!
add: aReceptiveAccount 
	
	accounts add: aReceptiveAccount.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:36:23' prior: 50552898!
test02

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: (Deposit for: 100)).
	self assert: portfolio balance equals: 100! !

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:36:23'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:36:23'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:36:23'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:36:23'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:37:39'!
test04

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addReceptiveAcount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addPortfolio: newPortfolio.
	self assert: portfolio balance equals: 100! !

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:37:42'!
ERROR!
!Portfolio methodsFor: 'add' stamp: 'GM 10/6/2022 21:37:50'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/6/2022 21:38:15'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'add' stamp: 'GM 10/6/2022 21:38:12' prior: 50552948!
addPortfolio: aPortfolio 
	
	portfolios add: aPortfolio! !

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:38:17'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'GM 10/6/2022 21:38:32' prior: 50552783 overrides: 16920235!
initialize

	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:38:33'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:38:33'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:38:33'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:38:33'!
FAILURE!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:38:33'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:40:28' prior: 50552866!
balance
	
	^accounts sum: [ :account | account balance ] ifEmpty: [ 0 ] + (portfolios sum: [ :portfolio | portfolio balance ] ifEmpty: [ 0 ]).! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:40:32'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:40:32'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:40:32'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:40:32'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:40:39'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:41:14' prior: 50552985!
balance
	
	^(accounts sum: [ :account | account balance ] ifEmpty: [ 0 ]) + (portfolios sum: [ :portfolio | portfolio balance ] ifEmpty: [ 0 ]).! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:41:15'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:41:15'!
PASSED!
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:41:31' prior: 50553004!
balance
	
	| accountBalance |
	accountBalance := accounts sum: [ :account | account balance ] ifEmpty: [ 0 ].
	^(accountBalance) + (portfolios sum: [ :portfolio | portfolio balance ] ifEmpty: [ 0 ]).! !
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:41:51' prior: 50553021!
balance
	
	| accountBalance portfoliosBalance |
	accountBalance := accounts sum: [ :account | account balance ] ifEmpty: [ 0 ].
	portfoliosBalance := portfolios sum: [ :portfolio | portfolio balance ] ifEmpty: [ 0 ].
	^(accountBalance) + (portfoliosBalance).! !
!Portfolio methodsFor: 'balance' stamp: 'GM 10/6/2022 21:42:01' prior: 50553030!
balance
	
	| accountBalance portfoliosBalance |
	accountBalance := accounts sum: [ :account | account balance ] ifEmpty: [ 0 ].
	portfoliosBalance := portfolios sum: [ :portfolio | portfolio balance ] ifEmpty: [ 0 ].
	^accountBalance + portfoliosBalance.! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:42:03'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:42:03'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:42:03'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:42:03'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:48:05'!
test05

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	self assert: (portfolio hasRegistered: transaction). ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:48:11' prior: 50553061!
test05

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	self deny: (portfolio hasRegistered: transaction). ! !

!testRun: #PortfolioTest #test05 stamp: 'GM 10/6/2022 21:48:12'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/6/2022 21:48:40'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'testing' stamp: 'GM 10/6/2022 21:48:51' prior: 50553079!
hasRegistered: aDeposit 
	
	false! !

!testRun: #PortfolioTest #test05 stamp: 'GM 10/6/2022 21:48:53'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/6/2022 21:49:07' prior: 50553084!
hasRegistered: aDeposit 
	
	^false! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:49:09'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:49:09'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:49:09'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:49:09'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/6/2022 21:49:09'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:50:08' prior: 50553069!
test05

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio add: (ReceptiveAccount new register: transaction).
	self assert: (portfolio hasRegistered: transaction). ! !

!testRun: #PortfolioTest #test05 stamp: 'GM 10/6/2022 21:50:13'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:50:29' prior: 50553106!
test05

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	self assert: (portfolio hasRegistered: transaction). ! !

!testRun: #PortfolioTest #test05 stamp: 'GM 10/6/2022 21:50:30'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/6/2022 21:51:43' prior: 50553090!
hasRegistered: aTransaction 
	
	^accounts anySatisfy: [ :account | account hasRegistered: aTransaction ]! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/6/2022 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/6/2022 21:51:58'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:52:00'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:52:00'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:52:00'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:52:00'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/6/2022 21:52:00'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:53:00'!
test06

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio add: newPortfolio.
	self assert: (portfolio hasRegistered: transaction). ! !

!testRun: #PortfolioTest #test06 stamp: 'GM 10/6/2022 21:53:03'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/6/2022 21:53:14' prior: 50553164!
test06

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio addPortfolio: newPortfolio.
	self assert: (portfolio hasRegistered: transaction). ! !

!testRun: #PortfolioTest #test06 stamp: 'GM 10/6/2022 21:53:15'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/6/2022 21:54:39' prior: 50553132!
hasRegistered: aTransaction 
	
	^(accounts anySatisfy: [ :account | account hasRegistered: aTransaction ]) or: [
		portfolios anySatisfy: [ :portoflio | portoflio hasRegistered: aTransaction ]]! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/6/2022 21:54:44'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/6/2022 21:54:44'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/6/2022 21:54:44'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/6/2022 21:54:44'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/6/2022 21:54:44'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/6/2022 21:54:44'!
PASSED!

----SNAPSHOT----(6 October 2022 21:57:46) CuisUniversity-5481.image priorSource: 7059698!

----STARTUP---- (10 October 2022 17:03:10) as /home/gonzalo/Desktop/Portfolio/linux64/CuisUniversity-5481.image!


!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:05:24'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:05:24'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:05:24'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:05:24'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:05:24'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:05:24'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:05:24'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:08:05'!
test07

	| portfolio |
	
	portfolio := Portfolio new.
	self assert: (portfolio transactions).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:10:30'!
test08

	| portfolio |
	
	portfolio := Portfolio new.
	self assert: (portfolio transactions).! !

!methodRemoval: PortfolioTest #test07 stamp: 'GM 10/10/2022 17:10:30'!
test07

	| portfolio |
	
	portfolio := Portfolio new.
	self assert: (portfolio transactions).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:10:33'!
test07

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio addPortfolio: newPortfolio.
	self assert: (portfolio hasRegistered: transaction). ! !

!methodRemoval: PortfolioTest #test06 stamp: 'GM 10/10/2022 17:10:33'!
test06

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio addPortfolio: newPortfolio.
	self assert: (portfolio hasRegistered: transaction). !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:10:40'!
test06

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	self assert: (portfolio hasRegistered: transaction). ! !

!methodRemoval: PortfolioTest #test05 stamp: 'GM 10/10/2022 17:10:40'!
test05

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	self assert: (portfolio hasRegistered: transaction). !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:11:00'!
test05

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	self deny: (portfolio hasRegistered: transaction).! !

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:11:02'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:11:02'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:11:02'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:11:02'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:11:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:11:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:11:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:11:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:11:02'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:11:02'!
ERROR!

!methodRemoval: PortfolioTest #test08 stamp: 'GM 10/10/2022 17:11:13'!
test08

	| portfolio |
	
	portfolio := Portfolio new.
	self assert: (portfolio transactions).!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:11:16'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:11:16'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:11:16'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:11:16'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:11:16'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:11:16'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:11:16'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:11:16'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:12:30'!
test08

	| portfolio |
	
	portfolio := Portfolio new.
	self assert: portfolio transactions isEmpty.! !

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:12:34'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/10/2022 17:12:44'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/10/2022 17:13:06' prior: 50553366!
transactions

	^OrderedCollection new.! !

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:13:08'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:13:08'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:13:08'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:13:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:13:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:13:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:13:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:13:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:13:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:14:11'!
test09

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	self assert: portfolio transactions equals: (OrderedCollection with: transaction).! !

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:14:19'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/10/2022 17:18:02' prior: 50553371!
transactions

	^ accounts inject: OrderedCollection new into: [ :transactions :account | transactions addAll: account transactions ]! !

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:18:04'!
PASSED!

portfolio transactions!

| portfolio transaction |
portfolio := Portfolio new.
transaction := Deposit for: 100.
portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
portfolio transactions!

| portfolio transaction transaction2 |
portfolio := Portfolio new.
transaction := Deposit for: 100.
transaction2 := Deposit for: 50.
portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction2).
portfolio transactions!

| portfolio transaction transaction2 |
portfolio := Portfolio new.
transaction := Deposit for: 100.
transaction2 := Deposit for: 50.
portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction2).
portfolio transactions!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:21:26' prior: 50553396!
test09

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	self assert: portfolio transactions equals: (OrderedCollection with: transaction with: transaction).! !

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:21:26'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:21:54' prior: 50553470!
test09

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.! !

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:21:56'!
FAILURE!

|col|
col := OrderedCollection new.
col addAll: (OrderedCollection with: 1).
col addAll: (OrderedCollection with: 2).
!

|col|
col := OrderedCollection new.
col addAllLast: (OrderedCollection with: 1).
col addAllLast: (OrderedCollection with: 2).
!

|col|
col := OrderedCollection new.
col addAllLast: (OrderedCollection with: 1).
col addAllLast: (OrderedCollection with: 2).
!

|col|
col := OrderedCollection new.
col addAllLast: (OrderedCollection with: 1).
col addAllLast: (OrderedCollection with: 2).
col!
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/10/2022 17:25:34' prior: 50553410!
transactions

	^accounts inject: OrderedCollection new into: [ :transactions :account | transactions addAll: account transactions. transactions ]! !

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:25:41'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:26:05'!
test10

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:27:10' prior: 50553551!
test10

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio addPortfolio: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.
	! !

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:27:11'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:27:34' prior: 50553566!
test10

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio addPortfolio: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.
	! !

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:27:35'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/10/2022 17:31:30' prior: 50553520!
transactions

	|transactionsFromPortfolios transactionsFromAccounts|
	
	transactionsFromAccounts := accounts inject: OrderedCollection new into: [ :transactions :account | transactions addAll: account transactions. transactions ].
	transactionsFromPortfolios := portfolios inject: OrderedCollection new into: [ :transactions :portfolio | transactions addAll: portfolio transactions. transactions].
	transactionsFromAccounts addAll: transactionsFromPortfolios.
	^transactionsFromAccounts.! !

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:31:32'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:31:40'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:31:48' prior: 50553606!
test10

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addReceptiveAcount: (ReceptiveAccount new register: transaction).
	portfolio addPortfolio: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:34:52'!
PASSED!

Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Account category: 'Portfolio-Ejercicio' stamp: 'GM 10/10/2022 17:35:47'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----SNAPSHOT----(10 October 2022 17:35:52) CuisUniversity-5481.image priorSource: 7090144!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/10/2022 17:35:58'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GM 10/10/2022 17:36:08'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/10/2022 17:36:35'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/10/2022 17:36:43'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!methodRemoval: Portfolio #addPortfolio: stamp: 'GM 10/10/2022 17:36:51'!
addPortfolio: aPortfolio 
	
	portfolios add: aPortfolio!
!Portfolio methodsFor: 'add' stamp: 'GM 10/10/2022 17:37:02'!
addAcount: anAccount
	
	accounts add: anAccount.! !

!methodRemoval: Portfolio #addReceptiveAcount: stamp: 'GM 10/10/2022 17:37:07'!
addReceptiveAcount: aReceptiveAccount 
	
	accounts add: aReceptiveAccount.!
!Portfolio methodsFor: 'initialization' stamp: 'GM 10/10/2022 17:37:13' prior: 50552968 overrides: 16920235!
initialize

	accounts := OrderedCollection new.! !
!Portfolio methodsFor: 'balance' stamp: 'GM 10/10/2022 17:37:29' prior: 50553041!
balance

	^accounts sum: [ :account | account balance ] ifEmpty: [ 0 ].! !
!Portfolio methodsFor: 'testing' stamp: 'GM 10/10/2022 17:37:55' prior: 50553195!
hasRegistered: aTransaction 
	
	^accounts anySatisfy: [ :account | account hasRegistered: aTransaction ]! !
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/10/2022 17:38:08' prior: 50553623!
transactions

	^ portfolios inject: OrderedCollection new into: [ :transactions :portfolio | transactions addAll: portfolio transactions. transactions].! !

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:39:19'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:39:34' prior: 50553691!
test10

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:39:49' prior: 50553487!
test09

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.! !
!Portfolio methodsFor: 'add' stamp: 'GM 10/10/2022 17:39:56'!
addAccount: anAccount
	
	accounts add: anAccount.! !

!methodRemoval: Portfolio #addAcount: stamp: 'GM 10/10/2022 17:39:56'!
addAcount: anAccount
	
	accounts add: anAccount.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:40:07' prior: 50552917!
test02

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	self assert: portfolio balance equals: 100! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:40:16' prior: 50552886!
test03

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: (ReceptiveAccount new register: (Deposit for: 200)).
	self assert: portfolio balance equals: 300! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:40:26' prior: 50552935!
test04

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: 100! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:40:32' prior: 50553283!
test06

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (portfolio hasRegistered: transaction). ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:40:41' prior: 50553258!
test07

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: newPortfolio.
	self assert: (portfolio hasRegistered: transaction). ! !

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:40:44'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:40:50'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:40:54'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/10/2022 17:41:09' prior: 50553840!
transactions

	^ accounts inject: OrderedCollection new into: [ :transactions :portfolio | transactions addAll: portfolio transactions. transactions].! !

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:41:11'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 17:41:13'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/10/2022 17:41:35' prior: 50553950!
transactions

	^accounts inject: OrderedCollection new into: [ :transactions :portfolio | transactions addAll: portfolio transactions. transactions].! !
!Account methodsFor: 'initialization' stamp: 'GM 10/10/2022 17:42:11' overrides: 16920235!
initialize

	self subclassResponsibility.! !
!Account methodsFor: 'transactions' stamp: 'GM 10/10/2022 17:42:28'!
transactions

	self subclassResponsibility.! !
!Account methodsFor: 'testing' stamp: 'GM 10/10/2022 17:43:07'!
hasRegistered: aTransaction

	self subclassResponsibility.! !
!Account methodsFor: 'balance' stamp: 'GM 10/10/2022 17:43:34'!
balance

	self subclassResponsibility.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:47:23'!
test01BalanceOfEmptyPortfolioIsZero

	self assert: Portfolio new balance equals: 0! !

!methodRemoval: PortfolioTest #test01 stamp: 'GM 10/10/2022 17:47:23'!
test01

	self assert: Portfolio new balance equals: 0!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:47:50'!
test02BalanceOfPortfolioWithAccountIsAccountBalance

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	self assert: portfolio balance equals: 100! !

!methodRemoval: PortfolioTest #test02 stamp: 'GM 10/10/2022 17:47:50'!
test02

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	self assert: portfolio balance equals: 100!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:48:14'!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: (ReceptiveAccount new register: (Deposit for: 200)).
	self assert: portfolio balance equals: 300! !

!methodRemoval: PortfolioTest #test03 stamp: 'GM 10/10/2022 17:48:14'!
test03

	| portfolio |
	
	portfolio := Portfolio new.
	portfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: (ReceptiveAccount new register: (Deposit for: 200)).
	self assert: portfolio balance equals: 300!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:49:27'!
test04BalanceOfPortfolioWithPortfolioIsThatPortfolioBalance

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: 100! !

!methodRemoval: PortfolioTest #test04 stamp: 'GM 10/10/2022 17:49:27'!
test04

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: 100!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 17:52:02'!
test04

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: 100! !

!methodRemoval: PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsThatPortfolioBalance stamp: 'GM 10/10/2022 17:52:02'!
test04BalanceOfPortfolioWithPortfolioIsThatPortfolioBalance

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: 100!

----SNAPSHOT----(10 October 2022 18:05:02) CuisUniversity-5481.image priorSource: 7106911!

----QUIT----(10 October 2022 18:05:50) CuisUniversity-5481.image priorSource: 7119419!

----STARTUP---- (10 October 2022 18:08:15) as /home/gonzalo/Desktop/Portfolio/linux64/CuisUniversity-5481.image!


AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 'GM 10/10/2022 18:11:00'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'GM 10/10/2022 18:11:03'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 'GM 10/10/2022 18:11:09'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountTransaction methodsFor: 'value' stamp: 'GM 10/10/2022 18:11:24' prior: 50552370 overrides: 16902254!
value

	^ value! !
!AccountTransaction methodsFor: 'value' stamp: 'GM 10/10/2022 18:11:51'!
initializeFor: aValue

	value := aValue! !
!AccountTransaction methodsFor: 'value' stamp: 'GM 10/10/2022 18:11:52' prior: 50554183!
initializeFor: aValue

	value := aValue.! !

!methodRemoval: Deposit #value stamp: 'GM 10/10/2022 18:12:07'!
value

	^ value!

!methodRemoval: Withdraw #value stamp: 'GM 10/10/2022 18:12:12'!
value

	^ value!

!methodRemoval: Deposit #initializeFor: stamp: 'GM 10/10/2022 18:12:31'!
initializeFor: aValue

	value := aValue !

!methodRemoval: Withdraw #initializeFor: stamp: 'GM 10/10/2022 18:12:34'!
initializeFor: aValue

	value := aValue !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'GM 10/10/2022 18:13:03'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: Withdraw class #for: stamp: 'GM 10/10/2022 18:13:09'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: Deposit class #for: stamp: 'GM 10/10/2022 18:13:16'!
for: aValue

	^ self new initializeFor: aValue !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 18:18:11' prior: 50554044!
test02BalanceOfPortfolioWithAccountIsAccountBalance

	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new register: (Deposit for: 100).
	portfolio addAccount: account.
	self assert: portfolio balance equals: account balance.! !

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 18:18:12'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 18:18:12'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 18:20:39' prior: 50554062!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio account1 account2 |
	
	portfolio := Portfolio new.
	account1 :=  (ReceptiveAccount new register: (Deposit for: 100)).
	account2 := (ReceptiveAccount new register: (Deposit for: 200)).
	portfolio addAccount: account1; addAccount: account2.
	self assert: portfolio balance equals: account1 balance + account2 balance.! !

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 18:20:40'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 18:20:40'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 18:21:01' prior: 50554261!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio account1 account2 |
	
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new register: (Deposit for: 100).
	account2 := ReceptiveAccount new register: (Deposit for: 200).
	portfolio addAccount: account1; addAccount: account2.
	self assert: portfolio balance equals: account1 balance + account2 balance.! !

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 18:21:02'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 18:21:02'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 18:21:07' prior: 50554309!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio account1 account2 |
	
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new register: (Deposit for: 100).
	account2 := ReceptiveAccount new register: (Deposit for: 200).
	portfolio addAccount: account1; addAccount: account2.
	self assert: portfolio balance equals: 300.! !

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 18:21:08'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 18:21:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 18:21:12' prior: 50554356!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio account1 account2 |
	
	portfolio := Portfolio new.
	account1 := ReceptiveAccount new register: (Deposit for: 100).
	account2 := ReceptiveAccount new register: (Deposit for: 200).
	portfolio addAccount: account1; addAccount: account2.
	self assert: portfolio balance equals: account1 balance + account2 balance.! !

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 18:21:12'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 18:22:23'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 18:22:23'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/10/2022 18:23:07' prior: 50554108!
test04

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: newPortfolio balance.! !

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 18:23:08'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/10/2022 18:23:23'!
PASSED!

----QUIT----(10 October 2022 18:23:41) CuisUniversity-5481.image priorSource: 7119511!

----STARTUP---- (13 October 2022 19:53:48) as /home/gonzalo/Desktop/Portfolio/linux64/CuisUniversity-5481.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:20:09'!
test11

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self should: [portfolio addAccount: account]  
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: 'Cant add same account twice']! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:20:16' prior: 50554560!
test11

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self should: [portfolio addAccount: account]  
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: 'Cannot add same account twice']! !

!testRun: #PortfolioTest #test11 stamp: 'GM 10/13/2022 21:20:19'!
FAILURE!
!Portfolio methodsFor: 'add' stamp: 'GM 10/13/2022 21:22:31' prior: 50553878!
addAccount: anAccount
	
	(accounts anySatisfy: [:account | account = anAccount]) ifTrue: [self error: 'Cannot add same account twice.'].
	accounts add: anAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:22:48' prior: 50554575!
test11

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self should: [portfolio addAccount: account]  
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: 'Cannot add same account twice.']! !

!testRun: #PortfolioTest #test11 stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/13/2022 21:22:48'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/13/2022 21:22:48'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:24:37'!
test12

	| portfolio newPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	self should: [portfolio addAccount: newPortfolio]  
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: 'Cannot add same account twice.']! !

!testRun: #PortfolioTest #test12 stamp: 'GM 10/13/2022 21:24:38'!
FAILURE!
!Portfolio methodsFor: 'add' stamp: 'GM 10/13/2022 21:26:43' prior: 50554592!
addAccount: anAccount
	
	(accounts anySatisfy: [:account | account hasAccount: anAccount]) ifTrue: [self error: 'Cannot add same account twice.'].
	accounts add: anAccount.! !
!Account methodsFor: 'balance' stamp: 'GM 10/13/2022 21:26:59'!
hasAccount: anAccount

	self subclassResponsibility! !
!Portfolio methodsFor: 'balance' stamp: 'GM 10/13/2022 21:27:56' overrides: 50554676!
hasAccount: anAccount

	accounts anySatisfy: [:account | account hasAccount: anAccount]! !
!Portfolio methodsFor: 'testing' stamp: 'GM 10/13/2022 21:28:15' prior: 50554681 overrides: 50554676!
hasAccount: anAccount

	^ accounts anySatisfy: [:account | account hasAccount: anAccount]! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GM 10/13/2022 21:28:33' overrides: 50554676!
hasAccount: anAccount

	^ self = anAccount! !

!testRun: #PortfolioTest #test12 stamp: 'GM 10/13/2022 21:29:00'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:30:49' prior: 50554648!
test12

	| portfolio newPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self should: [portfolio addAccount: account]  
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: 'Cannot add same account twice.']! !

!testRun: #PortfolioTest #test12 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/13/2022 21:30:50'!
PASSED!
!Portfolio methodsFor: 'add' stamp: 'GM 10/13/2022 21:31:24' prior: 50554668!
addAccount: anAccount
	
	(self hasAccount: anAccount) ifTrue: [self error: 'Cannot add same account twice.'].
	accounts add: anAccount.! !

!testRun: #PortfolioTest #test12 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/13/2022 21:31:34'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:33:06'!
assertThatAccount: portfolio cannotBeAddedTo: account

	^ self should: [portfolio addAccount: account]  
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: 'Cannot add same account twice.']! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:33:06' prior: 50554701!
test12

	| portfolio newPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: portfolio cannotBeAddedTo: account! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:33:06' prior: 50554601!
test11

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self assertThatAccount: portfolio cannotBeAddedTo: account! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:33:26' prior: 50554795!
assertThatAccount: account cannotBeAddedTo: portfolio

	^ self should: [portfolio addAccount: account]  
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: 'Cannot add same account twice.']! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:33:37' prior: 50554806!
test12

	| portfolio newPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:33:45' prior: 50554820!
test11

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:33:46' prior: 50554857!
test11

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/13/2022 21:34:41'!
test13

	| portfolio newPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	portfolio addAccount: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/13/2022 21:34:42'!
FAILURE!

----QUIT----(13 October 2022 21:58:02) CuisUniversity-5481.image priorSource: 7132876!

----STARTUP---- (15 October 2022 14:33:48) as /home/gonzalo/Desktop/Portfolio/linux64/CuisUniversity-5481.image!


!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 14:34:37'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 14:36:23'!
FAILURE!
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 14:40:06' prior: 50554753!
addAccount: anAccount
	
	(self hasAccount: anAccount) ifTrue: [self error: 'Cannot add same account twice.'].
	(accounts anySatisfy: [:account | anAccount hasAccount: account]) ifTrue: [self error: 'Cannot add same account twice.'].
	accounts add: anAccount.! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 14:40:07'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 14:40:10'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 14:44:31'!
test14

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	otherPortfolio := Portfolio new.
	otherPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: portfolio! !

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 14:44:39'!
FAILURE!

!methodRemoval: PortfolioTest #test14 stamp: 'GM 10/15/2022 14:52:11'!
test14

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	otherPortfolio := Portfolio new.
	otherPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: portfolio!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 14:52:12'!
PASSED!

!methodRemoval: PortfolioTest #test13 stamp: 'GM 10/15/2022 14:54:09'!
test13

	| portfolio newPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	portfolio addAccount: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 14:55:37'!
test13

	| portfolio parentPortfolio account transaction |
	
	parentPortfolio := Portfolio new.
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	parentPortfolio addAccount: portfolio.
	parentPortfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 14:55:38'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:01:39'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:01:56'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:02:00'!
FAILURE!
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 15:04:26' prior: 50554907!
addAccount: anAccount
	
	(self hasAccount: anAccount) ifTrue: [self error: 'Cannot add same account twice.'].
	(self rootParentHasAccount: anAccount) ifTrue: [self error: 'Cannot have same account' ].
	accounts add: anAccount.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/15/2022 15:09:32'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/15/2022 15:09:25'!
rootParentHasAccount: anAccount

	^parentPortfolios anySatisfy: [ :parentPortfolio | parentPortfolio rootParentHasAccount: anAccount]! !
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/15/2022 15:09:39' prior: 50555084!
rootParentHasAccount: anAccount

	^parentPortfolios anySatisfy: [ :parentPortfolio | parentPortfolio rootParentHasAccount: anAccount]! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:09:44'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'GM 10/15/2022 15:10:48' prior: 50553823 overrides: 50554018!
initialize

	accounts := OrderedCollection new.
	parentPortfolios := OrderedCollection new.! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GM 10/15/2022 15:10:59'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'GM 10/15/2022 15:10:57' prior: 50552471 overrides: 50554018!
initialize

	transactions := OrderedCollection new.
	parentPortfolios := OrderedCollection new.! !

Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/15/2022 15:11:05'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GM 10/15/2022 15:11:09'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Account
	instanceVariableNames: 'parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Account
	instanceVariableNames: 'parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Account category: 'Portfolio-Ejercicio' stamp: 'GM 10/15/2022 15:11:21'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Account
	instanceVariableNames: 'parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/15/2022 15:11:58'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 15:12:50' prior: 50555066!
addAccount: anAccount
	
	(self hasAccount: anAccount) ifTrue: [self error: 'Cannot add same account twice.'].
	(self rootParentHasAccount: anAccount) ifTrue: [self error: 'Cannot have same account' ].
	accounts add: anAccount.
	anAccount addParent: self.! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:14:43'!
ERROR!
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 15:14:50'!
addParent: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 15:15:08' prior: 50555201!
addParent: aPortfolio 
	parentPortfolios add: aPortfolio.! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:15:16'!
ERROR!
!ReceptiveAccount methodsFor: 'add' stamp: 'GM 10/15/2022 15:15:27'!
addParent: aPortfolio 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'add' stamp: 'GM 10/15/2022 15:15:29' prior: 50555213!
addParent: aPortfolio 
	! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:15:30'!
FAILURE!
!Account methodsFor: 'balance' stamp: 'GM 10/15/2022 15:15:50'!
addParent

	self subclassResponsibility ! !
!Account methodsFor: 'balance' stamp: 'GM 10/15/2022 15:15:51' prior: 50555224!
addParent

	self subclassResponsibility! !
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 15:16:19' prior: 50555188!
addAccount: anAccount
	
	(self hasAccount: anAccount) ifTrue: [self error: 'Cannot add same account twice.'].
	(self rootParentHasAccount: anAccount) ifTrue: [self error: 'Cannot have same account'].
	accounts add: anAccount.
	anAccount addParent: self.! !
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 15:17:18' prior: 50555232!
addAccount: anAccount
	
	(self rootParentHasAccount: anAccount) ifTrue: [self error: 'Cannot have same account'].
	accounts add: anAccount.
	anAccount addParent: self.! !
!Portfolio class methodsFor: 'error messages' stamp: 'GM 10/15/2022 15:17:56'!
cannotHaveSameAccountErrorMessage

	^'Cannot have same account'! !
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 15:18:12' prior: 50555243!
addAccount: anAccount
	
	(self rootParentHasAccount: anAccount) ifTrue: [self class cannotHaveSameAccountErrorMessage].
	accounts add: anAccount.
	anAccount addParent: self.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:18:32' prior: 50554832!
assertThatAccount: account cannotBeAddedTo: portfolio

	^ self should: [portfolio addAccount: account]  
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: Portfolio cannotHaveSameAccountErrorMessage.]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:18:35' prior: 50555265!
assertThatAccount: account cannotBeAddedTo: portfolio

	^ self should: [portfolio addAccount: account]  
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: Portfolio cannotHaveSameAccountErrorMessage]! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:18:37'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:18:50'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:18:59'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'GM 10/15/2022 15:21:12' prior: 50555091!
rootParentHasAccount: anAccount

	parentPortfolios ifEmpty: [^self hasAccount: anAccount].
	^parentPortfolios anySatisfy: [ :parentPortfolio | parentPortfolio rootParentHasAccount: anAccount]! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:21:13'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:21:23'!
FAILURE!
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 15:22:00' prior: 50555256!
addAccount: anAccount
	
	(self rootParentHasAccount: anAccount) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	accounts add: anAccount.
	anAccount addParent: self.! !

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:22:01'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:24:25'!
test14

	| portfolio parentPortfolio grandParentPortfolio account transaction |
	
	grandParentPortfolio := Portfolio new.
	parentPortfolio := Portfolio new.
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	grandParentPortfolio addAccount: account.
	grandParentPortfolio addAccount: parentPortfolio.
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:24:26'!
PASSED!

!methodRemoval: PortfolioTest #test14 stamp: 'GM 10/15/2022 15:24:29'!
test14

	| portfolio parentPortfolio grandParentPortfolio account transaction |
	
	grandParentPortfolio := Portfolio new.
	parentPortfolio := Portfolio new.
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	grandParentPortfolio addAccount: account.
	grandParentPortfolio addAccount: parentPortfolio.
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: portfolio!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:30:17'!
test14

	| portfolio newPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new.
	portfolio addAccount: account.
	newPortfolio addAccount: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:30:18'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:34:59' prior: 50555428!
test14

	| portfolio newPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	portfolio addAccount: account.
	newPortfolio addAccount: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 15:37:16' prior: 50555308!
addAccount: anAccount
	
	(self rootParentHasAccount: anAccount) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	(accounts anySatisfy: [ :account | anAccount hasAccount: account]) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	accounts add: anAccount.
	anAccount addParent: self.! !

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:37:22'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:43:28'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 15:48:21' prior: 50554688 overrides: 50554676!
hasAccount: anAccount

	(accounts anySatisfy: [ :account | anAccount hasAccount: account]) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	^ accounts anySatisfy: [:account | account hasAccount: anAccount].
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:49:48'!
test15

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	otherPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	otherPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: portfolio! !

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:49:49'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:49:54'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 15:50:15' prior: 50555551 overrides: 50554676!
hasAccount: anAccount

	"(accounts anySatisfy: [ :account | anAccount hasAccount: account]) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage]."
	^ accounts anySatisfy: [:account | account hasAccount: anAccount].
	! !

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:50:31'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 15:50:48' prior: 50555662 overrides: 50554676!
hasAccount: anAccount

	(accounts anySatisfy: [ :account | anAccount hasAccount: account]) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	^ accounts anySatisfy: [:account | account hasAccount: anAccount].
	! !
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 15:51:01'!
hasSameAccounts: anAccount

	(accounts anySatisfy: [ :account | anAccount hasAccount: account]) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	^ accounts anySatisfy: [:account | account hasAccount: anAccount].
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:51:01' prior: 50555459!
addAccount: anAccount
	
	(self rootParentHasAccount: anAccount) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	(accounts anySatisfy: [ :account | anAccount hasSameAccounts: account]) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	accounts add: anAccount.
	anAccount addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:51:01' prior: 50555675 overrides: 50554676!
hasAccount: anAccount

	(accounts anySatisfy: [ :account | anAccount hasSameAccounts: account]) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	^ accounts anySatisfy: [:account | account hasSameAccounts: anAccount].
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:51:01' prior: 50555294!
rootParentHasAccount: anAccount

	parentPortfolios ifEmpty: [^self hasSameAccounts: anAccount].
	^parentPortfolios anySatisfy: [ :parentPortfolio | parentPortfolio rootParentHasAccount: anAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:51:01' prior: 50555685!
hasSameAccounts: anAccount

	(accounts anySatisfy: [ :account | anAccount hasSameAccounts: account]) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	^ accounts anySatisfy: [:account | account hasSameAccounts: anAccount].
	! !

!methodRemoval: Portfolio #hasAccount: stamp: 'GM 10/15/2022 15:51:02'!
hasAccount: anAccount

	(accounts anySatisfy: [ :account | anAccount hasSameAccounts: account]) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	^ accounts anySatisfy: [:account | account hasSameAccounts: anAccount].
	!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:51:09'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:51:23'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:51:34'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:51:34'!
FAILURE!
!ReceptiveAccount methodsFor: 'testing' stamp: 'GM 10/15/2022 15:52:12'!
hasSameAccounts: anAccount

	^ self = anAccount! !

!methodRemoval: ReceptiveAccount #hasAccount: stamp: 'GM 10/15/2022 15:52:12'!
hasAccount: anAccount

	^ self = anAccount!
!Account methodsFor: 'testing' stamp: 'GM 10/15/2022 15:52:24'!
hasSameAccounts: anAccount

	self subclassResponsibility! !

!methodRemoval: Account #hasAccount: stamp: 'GM 10/15/2022 15:52:24'!
hasAccount: anAccount

	self subclassResponsibility!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:52:30'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 15:53:55' prior: 50555731 overrides: 50555769!
hasSameAccounts: anAccount

	^(accounts anySatisfy: [ :account | anAccount hasSameAccounts: account]) or: [accounts anySatisfy: [:account | account hasSameAccounts: anAccount].]
! !

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:54:00'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:59:14'!
test16

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	otherPortfolio := Portfolio new.
	otherPortfolio addAccount: account.
	portfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: newPortfolio.! !

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 15:59:15'!
PASSED!
!Portfolio methodsFor: 'add' stamp: 'GM 10/15/2022 16:00:43' prior: 50555696!
addAccount: anAccount
	
	(self rootParentHasAccount: anAccount) ifTrue: [self error: self class cannotHaveSameAccountErrorMessage].
	accounts add: anAccount.
	anAccount addParent: self.! !

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:00:50'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 16:04:19' prior: 50555820 overrides: 50555769!
hasSameAccounts: anAccount

	^accounts anySatisfy: [ :account | (anAccount hasSameAccounts: account) or: [account hasSameAccounts: anAccount]] ! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:04:20'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 16:05:39'!
hasAccount: anAccount

	^accounts anySatisfy: [ :account | (account hasAccount: anAccount)].! !
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 16:07:03' prior: 50555985 overrides: 50555769!
hasSameAccounts: anAccount

	^ (anAccount hasAccount: self) or: [self hasAccount: anAccount]! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GM 10/15/2022 16:07:30'!
hasAccount: anAccount

	^ self = anAccount! !

!methodRemoval: ReceptiveAccount #hasSameAccounts: stamp: 'GM 10/15/2022 16:07:32'!
hasSameAccounts: anAccount

	^ self = anAccount!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:07:37'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:07:47'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:07:51'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:09:05'!
FAILURE!

self hasAccount: anAccount!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:13:07'!
FAILURE!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'GM 10/15/2022 16:16:28' prior: 50555117 overrides: 50554018!
initialize

	transactions := OrderedCollection new.! !
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 16:04:19' prior: 50556041 overrides: 50555769!
hasSameAccounts: anAccount

	^accounts anySatisfy: [ :account | (anAccount hasSameAccounts: account) or: [account hasSameAccounts: anAccount]] ! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:17:05'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 16:17:05'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 16:17:05'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 16:17:05'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:17:05'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:17:05'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:17:05'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:17:05'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:17:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:17:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:17:30'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 16:17:30'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 16:17:30'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 16:17:30'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 16:17:30'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 16:17:30'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 16:17:30'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 16:17:30'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 16:17:30'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 16:17:30'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:17:30'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:17:30'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:17:30'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:17:30'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:17:35'!
ERROR!
!ReceptiveAccount methodsFor: 'testing' stamp: 'GM 10/15/2022 16:18:11' overrides: 50555769!
hasSameAccounts: anAccount

	^ self = anAccount! !

!methodRemoval: ReceptiveAccount #hasAccount: stamp: 'GM 10/15/2022 16:18:11'!
hasAccount: anAccount

	^ self = anAccount!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:18:21'!
PASSED!

!methodRemoval: Portfolio #hasAccount: stamp: 'GM 10/15/2022 16:19:03'!
hasAccount: anAccount

	^accounts anySatisfy: [ :account | (account hasAccount: anAccount)].!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:19:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:23:45' prior: 50555870!
test16

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new. 
	portfolio addAccount: newPortfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 15:59:14' prior: 50556272!
test16

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	otherPortfolio := Portfolio new.
	otherPortfolio addAccount: account.
	portfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: newPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:24:21'!
test17

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new. 
	portfolio addAccount: newPortfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 16:24:24'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'GM 10/15/2022 16:25:41' prior: 50556075 overrides: 50555769!
hasSameAccounts: anAccount

	^ (self = anAccount) or: [accounts anySatisfy: [ :account | (anAccount hasSameAccounts: account) or: [account hasSameAccounts: anAccount]]]! !

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 16:25:42'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:29:04'!
test04BalanceOfPortfolioWithPortfolioEqualsPortfolioBalance

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: newPortfolio balance.! !

!methodRemoval: PortfolioTest #test04 stamp: 'GM 10/15/2022 16:29:04'!
test04

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: newPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:30:09'!
test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: newPortfolio balance.! !

!methodRemoval: PortfolioTest #test04BalanceOfPortfolioWithPortfolioEqualsPortfolioBalance stamp: 'GM 10/15/2022 16:30:09'!
test04BalanceOfPortfolioWithPortfolioEqualsPortfolioBalance

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: (ReceptiveAccount new register: (Deposit for: 100)).
	portfolio addAccount: newPortfolio.
	self assert: portfolio balance equals: newPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:31:21'!
test05EmptyPortfolioHasNotRegisteredTransaction

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	self deny: (portfolio hasRegistered: transaction).! !

!methodRemoval: PortfolioTest #test05 stamp: 'GM 10/15/2022 16:31:21'!
test05

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	self deny: (portfolio hasRegistered: transaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:31:53'!
test06PortfolioWithAccountWithTransactionHasRegisteredTransaction

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (portfolio hasRegistered: transaction). ! !

!methodRemoval: PortfolioTest #test06 stamp: 'GM 10/15/2022 16:31:53'!
test06

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (portfolio hasRegistered: transaction). !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:32:50'!
test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: newPortfolio.
	self assert: (portfolio hasRegistered: transaction). ! !

!methodRemoval: PortfolioTest #test07 stamp: 'GM 10/15/2022 16:32:50'!
test07

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: newPortfolio.
	self assert: (portfolio hasRegistered: transaction). !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:33:19'!
test08EmptyPortfolioHasNoTransactions

	| portfolio |
	
	portfolio := Portfolio new.
	self assert: portfolio transactions isEmpty.! !

!methodRemoval: PortfolioTest #test08 stamp: 'GM 10/15/2022 16:33:19'!
test08

	| portfolio |
	
	portfolio := Portfolio new.
	self assert: portfolio transactions isEmpty.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:34:09'!
test09PortfolioTransactionsEqualsAccountsTransactions

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test09 stamp: 'GM 10/15/2022 16:34:09'!
test09

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:34:54'!
test09PortfolioWithAccountTransactionsEqualsAccountsTransactions

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test09PortfolioTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 16:34:54'!
test09PortfolioTransactionsEqualsAccountsTransactions

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:35:13'!
test10PortfolioWithPortfolioEqualsPortfolioTransactions

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test10 stamp: 'GM 10/15/2022 16:35:13'!
test10

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := Deposit for: 100.
	newPortfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:35:37'!
test11CannotAddSameAccount

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.! !

!methodRemoval: PortfolioTest #test11 stamp: 'GM 10/15/2022 16:35:37'!
test11

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:35:42'!
test11CannotAddSameAccountTwice

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.! !

!methodRemoval: PortfolioTest #test11CannotAddSameAccount stamp: 'GM 10/15/2022 16:35:42'!
test11CannotAddSameAccount

	| portfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := Deposit for: 100.
	account := (ReceptiveAccount new register: transaction).
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:36:32' prior: 50556601!
test11CannotAddSameAccountTwice

	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.! !

!testRun: #PortfolioTest #test11CannotAddSameAccountTwice stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwice stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:36:33'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 16:36:33'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:36:52' prior: 50554843!
test12

	| portfolio newPortfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:38:16'!
test12CannotAddSameAccountToPortfolioWithPortfolioWithAccount

	| portfolio newPortfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !

!methodRemoval: PortfolioTest #test12 stamp: 'GM 10/15/2022 16:38:16'!
test12

	| portfolio newPortfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: account cannotBeAddedTo: portfolio!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:39:35'!
test11CannotAddSameAccountTwiceToPortfolio

	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.! !

!methodRemoval: PortfolioTest #test11CannotAddSameAccountTwice stamp: 'GM 10/15/2022 16:39:35'!
test11CannotAddSameAccountTwice

	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:40:02' prior: 50556706!
test12CannotAddSameAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio newPortfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	newPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	parentPortfolio addAccount: newPortfolio.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:40:13' prior: 50556750!
test12CannotAddSameAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio portfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio addAccount: account.
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:42:05'!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio portfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio addAccount: account.
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !

!methodRemoval: PortfolioTest #test12CannotAddSameAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 16:42:05'!
test12CannotAddSameAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio portfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio addAccount: account.
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:42:51' prior: 50556779!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio portfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio addAccount: account.
	
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:43:31' prior: 50556808!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio portfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio := Portfolio new addAccount: account.
	
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:43:52' prior: 50556822!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio portfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio := Portfolio new.
	portfolio addAccount: account.
	
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:45:07' prior: 50556836!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio portfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio := Portfolio new addAccount: account.
	
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:45:08'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 16:45:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:46:05'!
portFolioWith: account

	^ Portfolio new addAccount: account! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:46:05' prior: 50556850!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio portfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio := self portFolioWith: account.
	
	parentPortfolio addAccount: portfolio.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:46:34' prior: 50556931!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	parentPortfolio addAccount: self portFolioWith: account.
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:46:43' prior: 50556945!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	parentPortfolio addAccount: (self portFolioWith: account).
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:50:17' prior: 50556925!
portFolioWith: accounts

	^ accounts inject: Portfolio new into: [ :portfolio :account | portfolio addAccount: account]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:46:05' prior: 50556970!
portFolioWith: account

	^ Portfolio new addAccount: account! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:54:12' prior: 50554402!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio accountWithDepositFor100 account2 |
	
	portfolio := Portfolio new.
	accountWithDepositFor100 := ReceptiveAccount new register: (Deposit for: 100).
	account2 := ReceptiveAccount new register: (Deposit for: 200).
	portfolio addAccount: accountWithDepositFor100; addAccount: account2.
	self assert: portfolio balance equals: accountWithDepositFor100 balance + account2 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:54:19' prior: 50556983!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio accountWithDepositFor100 accountWithDepositFor200 |
	
	portfolio := Portfolio new.
	accountWithDepositFor100 := ReceptiveAccount new register: (Deposit for: 100).
	accountWithDepositFor200 := ReceptiveAccount new register: (Deposit for: 200).
	portfolio addAccount: accountWithDepositFor100; addAccount: accountWithDepositFor200.
	self assert: portfolio balance equals: accountWithDepositFor100 balance + accountWithDepositFor200 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:54:51'!
portFolioWith: account with: anotherAccount

	^ Portfolio new addAccount: account; addAccount: anotherAccount.! !
!Portfolio class methodsFor: 'error messages' stamp: 'GM 10/15/2022 16:55:58'!
with: anAccount

	^ self new addAccount: anAccount! !
!Portfolio class methodsFor: 'error messages' stamp: 'GM 10/15/2022 16:56:22'!
with: anAccount with: anotherAccount

	^ self new addAccount: anAccount; addAccount: anotherAccount.! !

!methodRemoval: PortfolioTest #portFolioWith: stamp: 'GM 10/15/2022 16:56:32'!
portFolioWith: account

	^ Portfolio new addAccount: account!

!methodRemoval: PortfolioTest #portFolioWith:with: stamp: 'GM 10/15/2022 16:56:33'!
portFolioWith: account with: anotherAccount

	^ Portfolio new addAccount: account; addAccount: anotherAccount.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:56:50' prior: 50556957!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio account |
	
	parentPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	parentPortfolio addAccount: (Portfolio with: account).
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GM 10/15/2022 16:58:19'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:58:25'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 16:58:25'!
PASSED!
!ReceptiveAccount class methodsFor: 'no messages' stamp: 'GM 10/15/2022 16:58:56'!
with: aTransaction

	^self new register: aTransaction! !
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:59:23'!
with: aTransaction anotherTransaction: anotherTransaction

	^self new register: aTransaction; register: anotherTransaction.! !
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 16:59:35'!
with: aTransaction with: anotherTransaction

	^self new register: aTransaction; register: anotherTransaction.! !

!methodRemoval: ReceptiveAccount class #with:anotherTransaction: stamp: 'GM 10/15/2022 16:59:35'!
with: aTransaction anotherTransaction: anotherTransaction

	^self new register: aTransaction; register: anotherTransaction.!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 16:59:46'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 16:59:46'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:00:28' prior: 50554218!
test02BalanceOfPortfolioWithAccountIsAccountBalance

	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount with: (Deposit for: 100).
	portfolio addAccount: account.
	self assert: portfolio balance equals: account balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:00:38' prior: 50557001!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio account accountWithDepositFor200 |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new register: (Deposit for: 100).
	accountWithDepositFor200 := ReceptiveAccount new register: (Deposit for: 200).
	portfolio addAccount: account; addAccount: accountWithDepositFor200.
	self assert: portfolio balance equals: account balance + accountWithDepositFor200 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:00:43' prior: 50557233!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio account anotherAccount |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new register: (Deposit for: 100).
	anotherAccount := ReceptiveAccount new register: (Deposit for: 200).
	portfolio addAccount: account; addAccount: anotherAccount.
	self assert: portfolio balance equals: account balance + anotherAccount balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:00:52' prior: 50557251!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio account anotherAccount |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount with: (Deposit for: 100).
	anotherAccount := ReceptiveAccount with: (Deposit for: 200).
	portfolio addAccount: account; addAccount: anotherAccount.
	self assert: portfolio balance equals: account balance + anotherAccount balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:01:24' prior: 50557267!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio account anotherAccount |
	
	account := ReceptiveAccount with: (Deposit for: 100).
	anotherAccount := ReceptiveAccount with: (Deposit for: 200).
	portfolio := Portfolio with: account with: anotherAccount.
	self assert: portfolio balance equals: account balance + anotherAccount balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:07:15' prior: 50557222!
test02BalanceOfPortfolioWithAccountIsAccountBalance

	| portfolio account |
	
	account := ReceptiveAccount with: (Deposit for: 100).
	portfolio := Portfolio with: account.
	self assert: portfolio balance equals: account balance.! !

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:07:16'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:07:16'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:10:03' prior: 50556387!
test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance

	| portfolio newPortfolio |
	
	newPortfolio := Portfolio with: (ReceptiveAccount with: (Deposit for: 100)).
	portfolio := Portfolio with: newPortfolio.
	self assert: portfolio balance equals: newPortfolio balance.! !

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:10:04'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:10:04'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:10:42' prior: 50556431!
test06PortfolioWithAccountWithTransactionHasRegisteredTransaction

	| portfolio transaction |
	
	transaction := Deposit for: 100.
	portfolio := Portfolio with: (ReceptiveAccount with: transaction).
	self assert: (portfolio hasRegistered: transaction). ! !

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:10:45'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:10:45'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:12:33' prior: 50556452!
test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction

	| portfolio newPortfolio transaction |
	
	transaction := Deposit for: 100.
	newPortfolio := Portfolio with: (ReceptiveAccount with: transaction).
	portfolio := Portfolio with: newPortfolio.
	self assert: (portfolio hasRegistered: transaction). ! !

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:12:34'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:12:34'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11'!
depositFor100

	^ Deposit for: 100! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50555042!
test13

	| portfolio parentPortfolio account transaction |
	
	parentPortfolio := Portfolio new.
	portfolio := Portfolio new.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	parentPortfolio addAccount: portfolio.
	parentPortfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50556551!
test10PortfolioWithPortfolioEqualsPortfolioTransactions

	| portfolio newPortfolio transaction |
	
	portfolio := Portfolio new.
	newPortfolio := Portfolio new.
	transaction := self depositFor100.
	newPortfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50556282!
test16

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	otherPortfolio := Portfolio new.
	otherPortfolio addAccount: account.
	portfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: newPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50557283!
test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances

	| portfolio account anotherAccount |
	
	account := ReceptiveAccount with: (self depositFor100).
	anotherAccount := ReceptiveAccount with: (Deposit for: 200).
	portfolio := Portfolio with: account with: anotherAccount.
	self assert: portfolio balance equals: account balance + anotherAccount balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50557444!
test06PortfolioWithAccountWithTransactionHasRegisteredTransaction

	| portfolio transaction |
	
	transaction := self depositFor100.
	portfolio := Portfolio with: (ReceptiveAccount with: transaction).
	self assert: (portfolio hasRegistered: transaction). ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50555561!
test15

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	otherPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	otherPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50557370!
test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance

	| portfolio newPortfolio |
	
	newPortfolio := Portfolio with: (ReceptiveAccount with: (self depositFor100)).
	portfolio := Portfolio with: newPortfolio.
	self assert: portfolio balance equals: newPortfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50557517!
test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction

	| portfolio newPortfolio transaction |
	
	transaction := self depositFor100.
	newPortfolio := Portfolio with: (ReceptiveAccount with: transaction).
	portfolio := Portfolio with: newPortfolio.
	self assert: (portfolio hasRegistered: transaction). ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50556415!
test05EmptyPortfolioHasNotRegisteredTransaction

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := self depositFor100.
	self deny: (portfolio hasRegistered: transaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50557298!
test02BalanceOfPortfolioWithAccountIsAccountBalance

	| portfolio account |
	
	account := ReceptiveAccount with: (self depositFor100).
	portfolio := Portfolio with: account.
	self assert: portfolio balance equals: account balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50555445!
test14

	| portfolio newPortfolio account transaction |
	
	portfolio := Portfolio new.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	portfolio addAccount: account.
	newPortfolio addAccount: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:13:11' prior: 50556520!
test09PortfolioWithAccountTransactionsEqualsAccountsTransactions

	| portfolio transaction |
	
	portfolio := Portfolio new.
	transaction := self depositFor100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42'!
emptyPortfolio

	^ Portfolio new! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42' prior: 50557597!
test13

	| portfolio parentPortfolio account transaction |
	
	parentPortfolio := self emptyPortfolio.
	portfolio := Portfolio new.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	parentPortfolio addAccount: portfolio.
	parentPortfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42' prior: 50557771!
test13

	| portfolio parentPortfolio account transaction |
	
	parentPortfolio := self emptyPortfolio.
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	parentPortfolio addAccount: portfolio.
	parentPortfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42' prior: 50556479!
test08EmptyPortfolioHasNoTransactions

	| portfolio |
	
	portfolio := self emptyPortfolio.
	self assert: portfolio transactions isEmpty.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42' prior: 50557049!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| parentPortfolio account |
	
	parentPortfolio := self emptyPortfolio.
	account := ReceptiveAccount new.
	parentPortfolio addAccount: (Portfolio with: account).
	self assertThatAccount: account cannotBeAddedTo: parentPortfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42' prior: 50557612!
test10PortfolioWithPortfolioEqualsPortfolioTransactions

	| portfolio newPortfolio transaction |
	
	portfolio := self emptyPortfolio.
	newPortfolio := Portfolio new.
	transaction := self depositFor100.
	newPortfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42' prior: 50557822!
test10PortfolioWithPortfolioEqualsPortfolioTransactions

	| portfolio newPortfolio transaction |
	
	portfolio := self emptyPortfolio.
	newPortfolio := self emptyPortfolio.
	transaction := self depositFor100.
	newPortfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42' prior: 50556730!
test11CannotAddSameAccountTwiceToPortfolio

	| portfolio account |
	
	portfolio := self emptyPortfolio.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42' prior: 50557628!
test16

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	otherPortfolio := Portfolio new.
	otherPortfolio addAccount: account.
	portfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: newPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:42' prior: 50557865!
test16

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := self emptyPortfolio. 
	otherPortfolio := Portfolio new.
	otherPortfolio addAccount: account.
	portfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: newPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50557883!
test16

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := self emptyPortfolio. 
	otherPortfolio := self emptyPortfolio.
	otherPortfolio addAccount: account.
	portfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: newPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50557672!
test15

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	otherPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	otherPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50557919!
test15

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := self emptyPortfolio. 
	otherPortfolio := Portfolio new.
	newPortfolio addAccount: account.
	otherPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50557937!
test15

	| portfolio newPortfolio otherPortfolio account transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := self emptyPortfolio. 
	otherPortfolio := self emptyPortfolio.
	newPortfolio addAccount: account.
	otherPortfolio addAccount: account.
	portfolio addAccount: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50557715!
test05EmptyPortfolioHasNotRegisteredTransaction

	| portfolio transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	self deny: (portfolio hasRegistered: transaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50556299!
test17

	| portfolio newPortfolio |
	
	portfolio := self emptyPortfolio.
	newPortfolio := Portfolio new. 
	portfolio addAccount: newPortfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50557983!
test17

	| portfolio newPortfolio |
	
	portfolio := self emptyPortfolio.
	newPortfolio := self emptyPortfolio. 
	portfolio addAccount: newPortfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50554034!
test01BalanceOfEmptyPortfolioIsZero

	self assert: self emptyPortfolio balance equals: 0! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50557750!
test09PortfolioWithAccountTransactionsEqualsAccountsTransactions

	| portfolio transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	portfolio addAccount: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50557736!
test14

	| portfolio newPortfolio account transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := Portfolio new. 
	portfolio addAccount: account.
	newPortfolio addAccount: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:14:43' prior: 50558025!
test14

	| portfolio newPortfolio account transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	account := (ReceptiveAccount new register: transaction).
	newPortfolio := self emptyPortfolio. 
	portfolio addAccount: account.
	newPortfolio addAccount: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:15:50' prior: 50558009!
test09PortfolioWithAccountTransactionsEqualsAccountsTransactions

	| portfolio transaction |
	
	transaction := self depositFor100.
	portfolio := Portfolio with: (ReceptiveAccount with: transaction) 
					   with: (ReceptiveAccount new register: transaction).
	self assert: (OrderedCollection with: transaction with: transaction) equals: portfolio transactions.! !

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:15:52'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:15:52'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:17:46' prior: 50557838!
test10PortfolioWithPortfolioEqualsPortfolioTransactions

	| portfolio newPortfolio transaction |
	
	transaction := self depositFor100.
	newPortfolio := Portfolio with: (ReceptiveAccount with: transaction).
	portfolio := Portfolio with: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:17:46'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:17:46'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:18:09' prior: 50558132!
test10PortfolioWithPortfolioEqualsPortfolioTransactions

	| portfolio newPortfolio transaction |
	
	transaction := self depositFor100.
	newPortfolio := Portfolio with: (ReceptiveAccount with: transaction).
	portfolio := Portfolio with: newPortfolio.
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:18:45' prior: 50558207!
test10PortfolioWithPortfolioEqualsPortfolioTransactions

	| portfolio transaction |
	
	transaction := self depositFor100.
	portfolio := Portfolio with: Portfolio with: (ReceptiveAccount with: transaction).
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:19:02' prior: 50558221!
test10PortfolioWithPortfolioEqualsPortfolioTransactions

	| portfolio transaction |
	
	transaction := self depositFor100.
	portfolio := Portfolio with: (Portfolio with: (ReceptiveAccount with: transaction)).
	self assert: (OrderedCollection with: transaction) equals: portfolio transactions.! !

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:19:04'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:19:04'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:19:41' prior: 50557854!
test11CannotAddSameAccountTwiceToPortfolio

	| portfolio account |
	
	portfolio := self emptyPortfolio.
	account := ReceptiveAccount new.
	portfolio with: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.! !

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:19:42'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:19:53' prior: 50558308!
test11CannotAddSameAccountTwiceToPortfolio

	| portfolio account |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio with: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio.! !

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:19:54'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:19:54'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:20:37' prior: 50557809!
test12CannotAddAccountToPortfolioWithPortfolioWithAccount

	| portfolio account |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio with: (Portfolio with: account).
	self assertThatAccount: account cannotBeAddedTo: portfolio! !

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:20:38'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:20:38'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:22:16' prior: 50557786!
test13

	| portfolio parentPortfolio account |
	
	portfolio := self emptyPortfolio.
	account := ReceptiveAccount new.
	parentPortfolio := Portfolio with: portfolio with: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:22:57' prior: 50558465!
test13

	| portfolio account |
	
	portfolio := self emptyPortfolio.
	account := ReceptiveAccount new.
	Portfolio with: portfolio with: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:24:01'!
test13CannotAddAccountWhenItsParentsHaveSameAccount

	| portfolio account |
	
	portfolio := self emptyPortfolio.
	account := ReceptiveAccount new.
	Portfolio with: portfolio with: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio! !

!methodRemoval: PortfolioTest #test13 stamp: 'GM 10/15/2022 17:24:01'!
test13

	| portfolio account |
	
	portfolio := self emptyPortfolio.
	account := ReceptiveAccount new.
	Portfolio with: portfolio with: account.
	self assertThatAccount: account cannotBeAddedTo: portfolio!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:24:59' prior: 50558040!
test14

	| portfolio newPortfolio account |
	
	portfolio := self emptyPortfolio.
	account := ReceptiveAccount new.
	newPortfolio := self emptyPortfolio. 
	portfolio addAccount: account.
	newPortfolio addAccount: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:26:02' prior: 50558506!
test14

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio with: account.
	newPortfolio := Portfolio with: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:26:20'!
test14CannotAddPortfolioToPortfolioWithSameAccounts

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio with: account.
	newPortfolio := Portfolio with: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !

!methodRemoval: PortfolioTest #test14 stamp: 'GM 10/15/2022 17:26:20'!
test14

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	portfolio := Portfolio with: account.
	newPortfolio := Portfolio with: account.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio!

!testRun: #PortfolioTest #test14CannotAddPortfolioToPortfolioWithSameAccounts stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test13CannotAddAccountWhenItsParentsHaveSameAccount stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test14CannotAddPortfolioToPortfolioWithSameAccounts stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GM 10/15/2022 17:26:29'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GM 10/15/2022 17:26:29'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:28:03' prior: 50557955!
test15

	| portfolio otherPortfolio account |
	
	account := ReceptiveAccount new.
	otherPortfolio := Portfolio with: account.
	portfolio := Portfolio with: (Portfolio with: account).
	self assertThatAccount: otherPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:28:25' prior: 50558615!
test15

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	newPortfolio := Portfolio with: account.
	portfolio := Portfolio with: (Portfolio with: account).
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:28:54'!
test15CannotAddPortfolioToPortfolioWithPortfolioWithSameAccounts

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	newPortfolio := Portfolio with: account.
	portfolio := Portfolio with: (Portfolio with: account).
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio! !

!methodRemoval: PortfolioTest #test15 stamp: 'GM 10/15/2022 17:28:54'!
test15

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	newPortfolio := Portfolio with: account.
	portfolio := Portfolio with: (Portfolio with: account).
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:30:28' prior: 50557901!
test16

	| portfolio newPortfolio otherPortfolio account |
	
	account := ReceptiveAccount new.
	newPortfolio := self emptyPortfolio. 
	otherPortfolio := Portfolio with: account.
	portfolio := Portfolio with: account with: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: newPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:30:36' prior: 50558660!
test16

	| newPortfolio otherPortfolio account |
	
	account := ReceptiveAccount new.
	newPortfolio := self emptyPortfolio. 
	otherPortfolio := Portfolio with: account.
	Portfolio with: account with: newPortfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: newPortfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:31:36' prior: 50558673!
test16

	| portfolio otherPortfolio account |
	
	account := ReceptiveAccount new.
	portfolio := self emptyPortfolio. 
	otherPortfolio := Portfolio with: account.
	Portfolio with: account with: portfolio.
	self assertThatAccount: otherPortfolio cannotBeAddedTo: portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:31:40' prior: 50558686!
test16

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	portfolio := self emptyPortfolio. 
	newPortfolio := Portfolio with: account.
	Portfolio with: account with: portfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:32:21'!
test16CannotAddPortfolioToPortfolioWhenItsParentsHaveSameAccount

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	portfolio := self emptyPortfolio. 
	newPortfolio := Portfolio with: account.
	Portfolio with: account with: portfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !

!methodRemoval: PortfolioTest #test16 stamp: 'GM 10/15/2022 17:32:21'!
test16

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	portfolio := self emptyPortfolio. 
	newPortfolio := Portfolio with: account.
	Portfolio with: account with: portfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:32:35'!
test16CannotAddPortfolioToPortfolioWhenItsParentsHaveSameAccounts

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	portfolio := self emptyPortfolio. 
	newPortfolio := Portfolio with: account.
	Portfolio with: account with: portfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !

!methodRemoval: PortfolioTest #test16CannotAddPortfolioToPortfolioWhenItsParentsHaveSameAccount stamp: 'GM 10/15/2022 17:32:35'!
test16CannotAddPortfolioToPortfolioWhenItsParentsHaveSameAccount

	| portfolio newPortfolio account |
	
	account := ReceptiveAccount new.
	portfolio := self emptyPortfolio. 
	newPortfolio := Portfolio with: account.
	Portfolio with: account with: portfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:33:15' prior: 50557993!
test17

	| portfolio newPortfolio |
	
	newPortfolio := self emptyPortfolio. 
	portfolio := Portfolio with: newPortfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:34:21'!
test17CannotAddSamePortfolioTwice

	| portfolio newPortfolio |
	
	newPortfolio := self emptyPortfolio. 
	portfolio := Portfolio with: newPortfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !

!methodRemoval: PortfolioTest #test17 stamp: 'GM 10/15/2022 17:34:21'!
test17

	| portfolio newPortfolio |
	
	newPortfolio := self emptyPortfolio. 
	portfolio := Portfolio with: newPortfolio.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:34:59'!
test18

	| portfolio newPortfolio |
	
	portfolio := Portfolio new.
	self assertThatAccount: newPortfolio cannotBeAddedTo: portfolio.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GM 10/15/2022 17:35:10' prior: 50558788!
test18

	| portfolio |
	
	portfolio := Portfolio new.
	self assertThatAccount: portfolio cannotBeAddedTo: portfolio.! !

!testRun: #PortfolioTest #test18 stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test13CannotAddAccountWhenItsParentsHaveSameAccount stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test14CannotAddPortfolioToPortfolioWithSameAccounts stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddPortfolioToPortfolioWithPortfolioWithSameAccounts stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddPortfolioToPortfolioWhenItsParentsHaveSameAccounts stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddSamePortfolioTwice stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GM 10/15/2022 17:35:11'!
PASSED!

!methodRemoval: PortfolioTest #test18 stamp: 'GM 10/15/2022 17:35:22'!
test18

	| portfolio |
	
	portfolio := Portfolio new.
	self assertThatAccount: portfolio cannotBeAddedTo: portfolio.!
!Account methodsFor: 'adding' stamp: 'GM 10/15/2022 17:37:02'!
addParent: aPortfolio

	self subclassResponsibility! !

!methodRemoval: Account #addParent stamp: 'GM 10/15/2022 17:37:03'!
addParent

	self subclassResponsibility!

----SNAPSHOT----(15 October 2022 17:42:40) CuisUniversity-5481.image priorSource: 7143845!
!PortfolioTest methodsFor: 'tests' stamp: 'GM 10/15/2022 17:43:27'!
test05EmptyPortfolioHasNoRegisteredTransaction

	| portfolio transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	self deny: (portfolio hasRegistered: transaction).! !

!methodRemoval: PortfolioTest #test05EmptyPortfolioHasNotRegisteredTransaction stamp: 'GM 10/15/2022 17:43:27'!
test05EmptyPortfolioHasNotRegisteredTransaction

	| portfolio transaction |
	
	portfolio := self emptyPortfolio.
	transaction := self depositFor100.
	self deny: (portfolio hasRegistered: transaction).!

----SNAPSHOT----(15 October 2022 17:44:50) CuisUniversity-5481.image priorSource: 7271524!

!testRun: #PortfolioTest #test17CannotAddSamePortfolioTwice stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNoRegisteredTransaction stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test13CannotAddAccountWhenItsParentsHaveSameAccount stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test14CannotAddPortfolioToPortfolioWithSameAccounts stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddPortfolioToPortfolioWithPortfolioWithSameAccounts stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddPortfolioToPortfolioWhenItsParentsHaveSameAccounts stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddSamePortfolioTwice stamp: 'GM 10/15/2022 17:45:37'!
PASSED!

----SNAPSHOT----(15 October 2022 17:46:43) CuisUniversity-5481.image priorSource: 7272229!

!testRun: #PortfolioTest #test16CannotAddPortfolioToPortfolioWhenItsParentsHaveSameAccounts stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountIsAccountBalance stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithManyAccountsIsSumOfAccountsBalances stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test04BalanceOfPortfolioWithPortfolioIsPortfolioBalance stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test05EmptyPortfolioHasNoRegisteredTransaction stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithAccountWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithPortfolioWithTransactionHasRegisteredTransaction stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithAccountTransactionsEqualsAccountsTransactions stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithPortfolioEqualsPortfolioTransactions stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test11CannotAddSameAccountTwiceToPortfolio stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test12CannotAddAccountToPortfolioWithPortfolioWithAccount stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test13CannotAddAccountWhenItsParentsHaveSameAccount stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test14CannotAddPortfolioToPortfolioWithSameAccounts stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddPortfolioToPortfolioWithPortfolioWithSameAccounts stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test16CannotAddPortfolioToPortfolioWhenItsParentsHaveSameAccounts stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddSamePortfolioTwice stamp: 'GM 10/15/2022 17:46:45'!
PASSED!

----SNAPSHOT----(15 October 2022 17:47:40) CuisUniversity-5481.image priorSource: 7274497!